version: "3.8"

services:
  # app:
  #   build: .
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - mongo
  #     - redis
  #   networks:
  #     - dongy
  #   restart: always
  #   environment:
  #     APP_PORT: 3001
  #     APP_ENV: development

  #     MONGODB_URL: ${MONGODB_URL}
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #     MONGO_INITDB_CONNECT_TIMEOUT: ${MONGO_INITDB_CONNECT_TIMEOUT}

  #     AWS_REGION: ${AWS_REGION}
  #     AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  #     AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  #     AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}

  #     REDIS_ADDRESS: ${REDIS_ADDRESS}
  #     REDIS_URL: redis:6379
  #     REDIS_PASSWORD: ""
  #     REDIS_DB: 0

  #     ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
  #     REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
  #     ACCESS_TOKEN_MINUTE_LIFESPAN: ${ACCESS_TOKEN_MINUTE_LIFESPAN}
  #     REFRESH_TOKEN_MINUTE_LIFESPAN: ${REFRESH_TOKEN_MINUTE_LIFESPAN}

  #     OMISE_PUBLIC_KEY: ${OMISE_PUBLIC_KEY}
  #     OMISE_PRIVATE_KEY: ${OMISE_PRIVATE_KEY}
  #   command: ["go", "run", "./cmd/main.go"]

  mongo:
    image: mongo:latest
    ports:
      - "3002:27017"
    volumes:
      - mongo_data:/data/db
      - ./init.js:/docker-entrypoint-initdb.d/init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_CONNECT_TIMEOUT: ${MONGO_INITDB_CONNECT_TIMEOUT}
    networks:
      - dongy
    restart: always

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/data"
    networks:
      - dongy
    restart: always

volumes:
  mongo_data:
  redis_data:

networks:
  dongy:
    driver: bridge
