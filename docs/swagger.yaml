definitions:
  dto.Buyer:
    properties:
      address:
        type: string
      buyerID:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  dto.BuyerRegisterRequest:
    properties:
      address:
        type: string
      name:
        type: string
      password:
        type: string
      payment:
        type: string
      phoneNumber:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
      success:
        type: boolean
    type: object
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.LoginResponse:
    properties:
      accessToken:
        type: string
      accessTokenExpiredIn:
        type: integer
      data: {}
      message:
        type: string
      refreshToken:
        type: string
      refreshTokenExpiredIn:
        type: integer
      status:
        type: integer
      success:
        type: boolean
    type: object
  dto.LogoutRequest:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  dto.Order:
    properties:
      appointmentID:
        type: string
      buyerID:
        type: string
      createdAt:
        type: string
      orderID:
        type: string
      products:
        items:
          $ref: '#/definitions/dto.Product'
        type: array
      sellerID:
        type: string
      status:
        type: integer
      totalPrice:
        type: number
    type: object
  dto.OrderCreateRequest:
    properties:
      buyerID:
        type: string
      products:
        items:
          $ref: '#/definitions/dto.Product'
        type: array
      sellerID:
        type: string
    type: object
  dto.Product:
    properties:
      SellerID:
        type: string
      color:
        type: string
      createdAt:
        type: string
      description:
        type: string
      imageURL:
        type: string
      price:
        type: number
      productID:
        type: string
      productName:
        type: string
      tag:
        items:
          type: string
        type: array
    type: object
  dto.ProductCreateRequest:
    properties:
      SellerID:
        type: string
      color:
        type: string
      createdAt:
        type: string
      description:
        type: string
      imageURL:
        type: string
      price:
        type: number
      productName:
        type: string
      tag:
        items:
          type: string
        type: array
    type: object
  dto.RefreshTokenResponse:
    properties:
      accessToken:
        type: string
      accessTokenExpiredIn:
        type: integer
      message:
        type: string
      status:
        type: integer
      success:
        type: boolean
    type: object
  dto.Review:
    properties:
      buyerID:
        type: string
      date:
        type: string
      image:
        type: string
      message:
        type: string
      reviewID:
        type: string
      score:
        type: integer
      sellerID:
        type: string
    type: object
  dto.ReviewCreateRequest:
    properties:
      buyerID:
        type: string
      image:
        type: string
      message:
        type: string
      score:
        type: integer
      sellerID:
        type: string
    type: object
  dto.ReviewUpdateRequest:
    properties:
      image:
        type: string
      message:
        type: string
      score:
        type: integer
    type: object
  dto.Seller:
    properties:
      address:
        type: string
      city:
        type: string
      name:
        type: string
      payment:
        type: string
      phoneNumber:
        type: string
      province:
        type: string
      score:
        type: number
      sellerID:
        type: string
      surname:
        type: string
      transaction:
        items:
          $ref: '#/definitions/dto.Transaction'
        type: array
      username:
        type: string
      zip:
        type: string
    type: object
  dto.SellerRegisterRequest:
    properties:
      address:
        type: string
      city:
        type: string
      name:
        type: string
      password:
        type: string
      payment:
        type: string
      phoneNumber:
        type: string
      province:
        type: string
      score:
        type: number
      surname:
        type: string
      username:
        type: string
      zip:
        type: string
    type: object
  dto.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
      success:
        type: boolean
    type: object
  dto.Transaction:
    properties:
      amount:
        minimum: 0
        type: number
      data:
        type: string
      product:
        items:
          type: string
        type: array
    type: object
  model.Buyer:
    properties:
      address:
        type: string
      buyerID:
        type: string
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  model.Product:
    properties:
      SellerID:
        type: string
      color:
        type: string
      createdAt:
        type: string
      description:
        type: string
      imageURL:
        type: string
      price:
        type: number
      productID:
        type: string
      productName:
        type: string
      tag:
        items:
          type: string
        type: array
    type: object
  model.Seller:
    properties:
      address:
        type: string
      city:
        type: string
      name:
        type: string
      password:
        type: string
      payment:
        type: string
      phoneNumber:
        type: string
      province:
        type: string
      score:
        type: number
      sellerID:
        type: string
      surname:
        type: string
      transaction:
        items:
          $ref: '#/definitions/model.Transaction'
        type: array
      username:
        type: string
      zip:
        type: string
    type: object
  model.Transaction:
    properties:
      amount:
        minimum: 0
        type: number
      data:
        type: string
      product:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
paths:
  /auth/buyer/:
    post:
      consumes:
      - application/json
      description: Authenticate a buyer and returns tokens
      parameters:
      - description: Buyer login credential
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.LoginResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Buyer'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Buyer login
      tags:
      - auth
  /auth/logout/:
    post:
      consumes:
      - application/json
      description: Invalidate user's token
      parameters:
      - description: User's tokens
        in: body
        name: logoutRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: User logout
      tags:
      - auth
  /auth/refresh/:
    post:
      consumes:
      - application/json
      description: Refresh access token for user
      parameters:
      - description: Bearer {refreshToken}
        in: header
        name: refreshToken
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RefreshTokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Refresh token
      tags:
      - auth
  /auth/seller/:
    post:
      consumes:
      - application/json
      description: Authenticate a seller and returns tokens
      parameters:
      - description: Seller login credential
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.LoginResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Seller'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Seller login
      tags:
      - auth
  /buyer/:
    get:
      consumes:
      - application/json
      description: Retrieves all buyers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Buyer'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all buyers
      tags:
      - buyer
    post:
      consumes:
      - application/json
      description: Creates a new buyer in the database
      parameters:
      - description: Buyer to create
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.BuyerRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Buyer'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new buyer
      tags:
      - buyer
  /buyer/{buyer_id}:
    get:
      consumes:
      - application/json
      description: Retrieves a buyer's data by their ID
      parameters:
      - description: Buyer ID
        in: path
        name: buyer_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Buyer'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a buyer by ID
      tags:
      - buyer
  /buyer/{id}:
    put:
      consumes:
      - application/json
      description: Updates an existing buyer's data by their ID
      parameters:
      - description: Buyer ID
        in: path
        name: id
        required: true
        type: string
      - description: Buyer data to update
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/model.Buyer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Buyer'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update a buyer by ID
      tags:
      - buyer
  /order/:
    get:
      consumes:
      - application/json
      description: Get all orders by userID and userType
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: User Type
        in: path
        name: user_type
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Order'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get orders by userID and userType
      tags:
      - order
    post:
      consumes:
      - application/json
      description: Creates a new order in the database
      parameters:
      - description: Order to create
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/dto.OrderCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new order
      tags:
      - order
  /product/:
    get:
      consumes:
      - application/json
      description: Retrieves all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Product'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all products
      tags:
      - product
    post:
      consumes:
      - application/json
      description: Creates a new product in the database
      parameters:
      - description: Product to create
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProductCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new product
      tags:
      - product
  /product/{product_id}:
    get:
      consumes:
      - application/json
      description: Retrieves a product's data by their ID
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Product'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a product by ID
      tags:
      - product
    put:
      consumes:
      - application/json
      description: Updates an existing product's data by their ID
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      - description: Product data to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/model.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update a product by ID
      tags:
      - product
  /review/:
    get:
      consumes:
      - application/json
      description: Retrieves all reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Review'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all reviews
      tags:
      - review
    post:
      consumes:
      - application/json
      description: Creates a new review in the database
      parameters:
      - description: Review to create
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/dto.ReviewCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Review'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new review
      tags:
      - review
  /review/{review_id}:
    get:
      consumes:
      - application/json
      description: Retrieves a review's data by its ID
      parameters:
      - description: Review ID
        in: path
        name: review_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Review'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a review by ID
      tags:
      - review
    put:
      consumes:
      - application/json
      description: Updates an existing review's data by its ID
      parameters:
      - description: Review ID
        in: path
        name: review_id
        required: true
        type: string
      - description: Review data to update
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/dto.ReviewUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Review'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update a review by ID
      tags:
      - review
  /review/seller/{seller_id}:
    get:
      consumes:
      - application/json
      description: Retrieves each seller's reviews by seller ID
      parameters:
      - description: Seller ID
        in: path
        name: seller_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Review'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get reviews by sellerID
      tags:
      - review
  /seller/:
    get:
      consumes:
      - application/json
      description: Retrieves all sellers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Seller'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get all sellers
      tags:
      - seller
    post:
      consumes:
      - application/json
      description: Creates a new seller in the database
      parameters:
      - description: Seller to create
        in: body
        name: seller
        required: true
        schema:
          $ref: '#/definitions/dto.SellerRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Seller'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Create a new seller
      tags:
      - seller
  /seller/{seller_id}:
    get:
      consumes:
      - application/json
      description: Retrieves a seller's data by their ID
      parameters:
      - description: Seller ID
        in: path
        name: seller_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Seller'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a seller by ID
      tags:
      - seller
    put:
      consumes:
      - application/json
      description: Updates an existing seller's data by their ID
      parameters:
      - description: Seller ID
        in: path
        name: seller_id
        required: true
        type: string
      - description: Seller data to update
        in: body
        name: seller
        required: true
        schema:
          $ref: '#/definitions/model.Seller'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Seller'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Update a seller by ID
      tags:
      - seller
  /seller/{seller_id}/balance:
    get:
      consumes:
      - application/json
      description: Retrieves a seller's total balance by their ID
      parameters:
      - description: Seller ID
        in: path
        name: seller_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  type: number
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Get a seller's total balance by ID
      tags:
      - seller
  /seller/{seller_id}/transaction:
    post:
      consumes:
      - application/json
      description: Append transaction to seller transactions
      parameters:
      - description: Seller ID
        in: path
        name: seller_id
        required: true
        type: string
      - description: Transaction to append
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/dto.Transaction'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/dto.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.Transaction'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Add a transaction by sellerID
      tags:
      - seller
swagger: "2.0"
